{"ast":null,"code":"var _jsxFileName = \"/Users/nexle-user/Documents/dr-web-react/src/components/Main/Main.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { myFirebase, myFirestore, FirebaseRef } from '../../lib/firebase';\nimport Loader from '../Loader';\nimport WelcomeBoard from '../WelcomeBoard/WelcomeBoard';\nimport './Main.css';\nimport ChatBoard from './../ChatBoard/ChatBoard';\nimport { AppString, supportInfo } from './../ChatBox/Const';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkLogin = () => {\n      this.getListUser();\n    };\n\n    this.getListUser = async () => {\n      const {\n        member\n      } = this.props;\n      let ref = FirebaseRef.child(`/notifyDocter`);\n      ref.on('value', snapshot => {\n        const data = snapshot.val();\n\n        if (data && typeof data === 'object') {\n          let newData = [];\n          Object.keys(data).forEach(key => {\n            if (data[key] && data[key].status === 'pending' && data[key].userShare === member.id) {\n              newData.push({ ...data[key],\n                id: data[key].userId,\n                nickname: '',\n                photoUrl: '',\n                aboutMe: ''\n              });\n            }\n          });\n          const newArray = newData.reverse();\n\n          if (newArray.length > 0) {\n            this.listUser = [newArray];\n          }\n\n          this.setState({\n            isLoading: false\n          });\n        } else {\n          this.setState({\n            isLoading: false\n          });\n        }\n      });\n    };\n\n    this.onLogoutClick = () => {\n      this.setState({\n        isOpenDialogConfirmLogout: true\n      });\n    };\n\n    this.doLogout = () => {\n      this.setState({\n        isLoading: true\n      });\n      myFirebase.auth().signOut().then(() => {\n        this.setState({\n          isLoading: false\n        }, () => {\n          localStorage.clear();\n          this.props.showToast(1, 'Logout success');\n          this.props.history.push('/');\n        });\n      }).catch(function (err) {\n        this.setState({\n          isLoading: false\n        });\n        this.props.showToast(0, err.message);\n      });\n    };\n\n    this.hideDialogConfirmLogout = () => {\n      this.setState({\n        isOpenDialogConfirmLogout: false\n      });\n    };\n\n    this.onProfileClick = () => {\n      this.props.history.push('/profile');\n    };\n\n    this.renderListUser = () => {\n      if (this.listUser.length > 0) {\n        let viewListUser = [];\n        this.listUser.forEach((item, index) => {\n          if (item.id !== this.currentUserId) {\n            if (this.currentUserRole && this.currentUserRole !== '') {\n              viewListUser.push( /*#__PURE__*/React.createElement(\"button\", {\n                key: index,\n                className: this.state.currentPeerUser && this.state.currentPeerUser.id === item.id ? 'viewWrapItemFocused' : 'viewWrapItem',\n                onClick: () => {\n                  this.setState({\n                    currentPeerUser: item.data()\n                  });\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewAvatarItem viewAvatarItem-Second\",\n                style: {\n                  backgroundColor: item.color || 'black'\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 17\n                }\n              }, item.nickname.toUpperCase().substring(0, 1)), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewWrapContentItem\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(\"span\", {\n                className: \"textItem\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }\n              }, `Nickname: ${item.nickname}`), /*#__PURE__*/React.createElement(\"span\", {\n                className: \"textItem\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }\n              }, `About me: ${item.aboutMe ? item.aboutMe : 'Not available'}`))));\n            } else if (item.role) {\n              viewListUser.push( /*#__PURE__*/React.createElement(\"button\", {\n                key: index,\n                className: this.state.currentPeerUser && this.state.currentPeerUser.id === item.id ? 'viewWrapItemFocused' : 'viewWrapItem',\n                onClick: () => {\n                  this.setState({\n                    currentPeerUser: item.data()\n                  });\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewAvatarItem viewAvatarItem-Second\",\n                style: {\n                  backgroundColor: item.color || 'black'\n                } // src={item.photoUrl && item.photoUrl !== '' ? item.photoUrl : '/assets/img/avatar.png'}\n                // alt=\"icon avatar\"\n                ,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 17\n                }\n              }, item.nickname.toUpperCase().substring(0, 1)), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewWrapContentItem\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(\"span\", {\n                className: \"textItem\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }\n              }, `Nickname: ${item.nickname}`), /*#__PURE__*/React.createElement(\"span\", {\n                className: \"textItem\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }\n              }, `About me: ${item.aboutMe ? item.aboutMe : 'Not available'}`))));\n            }\n          }\n        });\n        return viewListUser;\n      } else {\n        return null;\n      }\n    };\n\n    this.renderDialogConfirmLogout = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"viewWrapTextDialogConfirmLogout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"titleDialogConfirmLogout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }\n      }, \"Are you sure to logout?\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"viewWrapButtonDialogConfirmLogout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btnYes\",\n        onClick: this.doLogout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }\n      }, \"YES\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btnNo\",\n        onClick: this.hideDialogConfirmLogout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }\n      }, \"CANCEL\")));\n    };\n\n    this.state = {\n      isLoading: true,\n      isOpenDialogConfirmLogout: false,\n      currentPeerUser: null\n    };\n    this.currentUserId = props.member.id;\n    this.currentUserAvatar = supportInfo.photoUrl;\n    this.currentUserNickname = supportInfo.nickName;\n    this.currentUserRole = supportInfo.role;\n    this.listUser = [];\n  }\n\n  componentDidMount() {\n    this.checkLogin();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"viewListUser\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, \" \", this.renderListUser()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"viewBoard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, this.state.currentPeerUser ? /*#__PURE__*/React.createElement(ChatBoard, {\n      currentPeerUser: this.state.currentPeerUser,\n      showToast: this.props.showToast,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(WelcomeBoard, {\n      currentUserNickname: this.currentUserNickname,\n      currentUserAvatar: this.currentUserAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }))), this.state.isOpenDialogConfirmLogout ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"viewCoverScreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    }, this.renderDialogConfirmLogout()) : null, this.state.isLoading ? /*#__PURE__*/React.createElement(Loader, {\n      show: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }) : null);\n  }\n\n}\n\nexport default withRouter(Main);","map":{"version":3,"sources":["/Users/nexle-user/Documents/dr-web-react/src/components/Main/Main.js"],"names":["React","Component","withRouter","myFirebase","myFirestore","FirebaseRef","Loader","WelcomeBoard","ChatBoard","AppString","supportInfo","Main","constructor","props","checkLogin","getListUser","member","ref","child","on","snapshot","data","val","newData","Object","keys","forEach","key","status","userShare","id","push","userId","nickname","photoUrl","aboutMe","newArray","reverse","length","listUser","setState","isLoading","onLogoutClick","isOpenDialogConfirmLogout","doLogout","auth","signOut","then","localStorage","clear","showToast","history","catch","err","message","hideDialogConfirmLogout","onProfileClick","renderListUser","viewListUser","item","index","currentUserId","currentUserRole","state","currentPeerUser","backgroundColor","color","toUpperCase","substring","role","renderDialogConfirmLogout","currentUserAvatar","currentUserNickname","nickName","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { myFirebase, myFirestore, FirebaseRef } from '../../lib/firebase'\nimport Loader from '../Loader'\nimport WelcomeBoard from '../WelcomeBoard/WelcomeBoard'\nimport './Main.css'\nimport ChatBoard from './../ChatBoard/ChatBoard'\nimport { AppString, supportInfo } from './../ChatBox/Const'\n\nclass Main extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true,\n      isOpenDialogConfirmLogout: false,\n      currentPeerUser: null\n    }\n\n    this.currentUserId = props.member.id\n    this.currentUserAvatar = supportInfo.photoUrl\n    this.currentUserNickname = supportInfo.nickName\n    this.currentUserRole = supportInfo.role\n    this.listUser = []\n  }\n\n  componentDidMount() {\n    this.checkLogin()\n  }\n\n  checkLogin = () => {\n    this.getListUser()\n  }\n\n  getListUser = async () => {\n    const { member } = this.props\n    let ref = FirebaseRef.child(`/notifyDocter`)\n    ref.on('value', snapshot => {\n      const data = snapshot.val()\n\n      if (data && typeof (data) === 'object') {\n        let newData = []\n        Object.keys(data).forEach(key => {\n          if (data[key] && data[key].status === 'pending' && data[key].userShare === member.id) {\n            newData.push({\n              ...data[key],\n              id: data[key].userId,\n              nickname: '',\n              photoUrl: '',\n              aboutMe: ''\n            })\n          }\n        })\n        const newArray = newData.reverse()\n\n        if (newArray.length > 0) {\n          this.listUser = [newArray]\n        }\n        this.setState({ isLoading: false })\n      } else {\n        this.setState({ isLoading: false })\n      }\n    })\n\n  }\n\n  onLogoutClick = () => {\n    this.setState({\n      isOpenDialogConfirmLogout: true\n    })\n  }\n\n  doLogout = () => {\n    this.setState({ isLoading: true })\n    myFirebase\n      .auth()\n      .signOut()\n      .then(() => {\n        this.setState({ isLoading: false }, () => {\n          localStorage.clear()\n          this.props.showToast(1, 'Logout success')\n          this.props.history.push('/')\n        })\n      })\n      .catch(function (err) {\n        this.setState({ isLoading: false })\n        this.props.showToast(0, err.message)\n      })\n  }\n\n  hideDialogConfirmLogout = () => {\n    this.setState({\n      isOpenDialogConfirmLogout: false\n    })\n  }\n\n  onProfileClick = () => {\n    this.props.history.push('/profile')\n  }\n\n  renderListUser = () => {\n    if (this.listUser.length > 0) {\n      let viewListUser = []\n      this.listUser.forEach((item, index) => {\n        if (item.id !== this.currentUserId) {\n\n          if (this.currentUserRole && this.currentUserRole !== '') {\n\n            viewListUser.push(\n              <button\n                key={index}\n                className={\n                  this.state.currentPeerUser &&\n                    this.state.currentPeerUser.id === item.id\n                    ? 'viewWrapItemFocused'\n                    : 'viewWrapItem'\n                }\n                onClick={() => {\n                  this.setState({ currentPeerUser: item.data() })\n                }}\n              >\n                <div\n                  className=\"viewAvatarItem viewAvatarItem-Second\"\n                  style={{ backgroundColor: item.color || 'black' }}\n                >\n                  {item.nickname.toUpperCase().substring(0, 1)}\n                </div>\n                <div className=\"viewWrapContentItem\">\n                  <span className=\"textItem\">{`Nickname: ${\n                    item.nickname\n                    }`}</span>\n                  <span className=\"textItem\">{`About me: ${\n                    item.aboutMe ? item.aboutMe : 'Not available'\n                    }`}</span>\n                </div>\n              </button>\n            )\n          } else if (item.role) {\n            viewListUser.push(\n              <button\n                key={index}\n                className={\n                  this.state.currentPeerUser &&\n                    this.state.currentPeerUser.id === item.id\n                    ? 'viewWrapItemFocused'\n                    : 'viewWrapItem'\n                }\n                onClick={() => {\n                  this.setState({ currentPeerUser: item.data() })\n                }}\n              >\n                <div\n                  className=\"viewAvatarItem viewAvatarItem-Second\"\n                  style={{ backgroundColor: item.color || 'black' }}\n                // src={item.photoUrl && item.photoUrl !== '' ? item.photoUrl : '/assets/img/avatar.png'}\n                // alt=\"icon avatar\"\n                >\n                  {item.nickname.toUpperCase().substring(0, 1)}\n                </div>\n                <div className=\"viewWrapContentItem\">\n                  <span className=\"textItem\">{`Nickname: ${\n                    item.nickname\n                    }`}</span>\n                  <span className=\"textItem\">{`About me: ${\n                    item.aboutMe ? item.aboutMe : 'Not available'\n                    }`}</span>\n                </div>\n              </button>\n            )\n          }\n\n        }\n      })\n      return viewListUser\n    } else {\n      return null\n    }\n  }\n\n  render() {\n    return (\n      <div>\n\n        {/* Body */}\n        <div className=\"body\">\n          <div className=\"viewListUser\"> {this.renderListUser()}</div>\n          <div className=\"viewBoard\">\n            {this.state.currentPeerUser ? (\n              <ChatBoard\n                currentPeerUser={this.state.currentPeerUser}\n                showToast={this.props.showToast}\n              />\n            ) : (\n                <WelcomeBoard\n                  currentUserNickname={this.currentUserNickname}\n                  currentUserAvatar={this.currentUserAvatar}\n                />\n              )}\n          </div>\n        </div>\n\n        {/* Dialog confirm */}\n        {this.state.isOpenDialogConfirmLogout ? (\n          <div className=\"viewCoverScreen\">\n            {this.renderDialogConfirmLogout()}\n          </div>\n        ) : null}\n\n        {/* Loading */}\n        {this.state.isLoading ? (\n          <Loader show={true} />\n        ) : null}\n      </div>\n    )\n  }\n\n  renderDialogConfirmLogout = () => {\n    return (\n      <div>\n        <div className=\"viewWrapTextDialogConfirmLogout\">\n          <span className=\"titleDialogConfirmLogout\">Are you sure to logout?</span>\n        </div>\n        <div className=\"viewWrapButtonDialogConfirmLogout\">\n          <button className=\"btnYes\" onClick={this.doLogout}>\n            YES\n                    </button>\n          <button className=\"btnNo\" onClick={this.hideDialogConfirmLogout}>\n            CANCEL\n                    </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Main)\n"]},"metadata":{},"sourceType":"module"}