{"ast":null,"code":"var _jsxFileName = \"/Users/nexle-user/Documents/dr-web-react/src/App.js\";\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\n/* eslint-disable jsx-a11y/alt-text */\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport Resgister from \"./pages/Resgister\";\nimport Home from \"./../src/Manage/Home\";\nimport LiveChat from './../src/Manage/LiveChat';\nimport Layout from './../src/Manage/Layout';\nimport { toast, ToastContainer } from 'react-toastify';\n\nclass App extends Component {\n  showToast(type, message) {\n    // 0 = warning, 1 = success\n    switch (type) {\n      case 0:\n        toast.warning(message);\n        break;\n\n      case 1:\n        toast.success(message);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      member = {}\n    } = this.props;\n    const {\n      isUserLoggedIn\n    } = member;\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, isUserLoggedIn ? /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Resgister,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }\n    }), isUserLoggedIn ? /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      component: LiveChat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 30\n      }\n    }) : null, /*#__PURE__*/React.createElement(Route, {\n      component: Resgister,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  member: state.member || {}\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/nexle-user/Documents/dr-web-react/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","connect","Resgister","Home","LiveChat","Layout","toast","ToastContainer","App","showToast","type","message","warning","success","render","member","props","isUserLoggedIn","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;AAAA;;AACA;;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,WAAP;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,gBAAtC;;AAGA,MAAMC,GAAN,SAAkBZ,SAAlB,CAA4B;AAE1Ba,EAAAA,SAAS,CAACC,IAAD,EAAOC,OAAP,EAAgB;AACvB;AACA,YAAQD,IAAR;AACE,WAAK,CAAL;AACEJ,QAAAA,KAAK,CAACM,OAAN,CAAcD,OAAd;AACA;;AACF,WAAK,CAAL;AACEL,QAAAA,KAAK,CAACO,OAAN,CAAcF,OAAd;AACA;;AACF;AACE;AARJ;AAUD;;AAGDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,MAAM,GAAG;AAAX,QAAkB,KAAKC,KAA7B;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAqBF,MAA3B;AACA,wBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGE,cAAc,gBACb,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEd,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,gBAEV,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAED,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJP,EAMGe,cAAc,gBAAI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEb,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,GAA+C,IANhE,eAOE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEF,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,CADF;AAcD;;AAlCyB;;AAoC5B,MAAMgB,eAAe,GAAGC,KAAK,KAAK;AAChCJ,EAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,IAAgB;AADQ,CAAL,CAA7B;;AAIA,MAAMK,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO,EAAP;AAGD,CAJD;;AAMA,eAAepB,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,GAA7C,CAAf","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/alt-text */\nimport React, { Component } from \"react\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport Resgister from \"./pages/Resgister\"\nimport Home from \"./../src/Manage/Home\"\nimport LiveChat from './../src/Manage/LiveChat'\nimport Layout from './../src/Manage/Layout'\nimport { toast, ToastContainer } from 'react-toastify'\n\n\nclass App extends Component {\n\n  showToast(type, message) {\n    // 0 = warning, 1 = success\n    switch (type) {\n      case 0:\n        toast.warning(message)\n        break\n      case 1:\n        toast.success(message)\n        break\n      default:\n        break\n    }\n  }\n\n\n  render() {\n    const { member = {} } = this.props\n    const { isUserLoggedIn } = member\n    return (\n      <Router>\n        <Switch>\n\n          {isUserLoggedIn ? (\n            <Route path=\"/\" component={Home} />\n          ) : (<Route exact path=\"/\" component={Resgister} />)\n          }\n          {isUserLoggedIn ? (<Route path=\"/\" component={LiveChat} />) : null}\n          <Route component={Resgister} />\n        </Switch>\n      </Router>\n\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  member: state.member || {},\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n"]},"metadata":{},"sourceType":"module"}