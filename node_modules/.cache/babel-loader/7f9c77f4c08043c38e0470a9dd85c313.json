{"ast":null,"code":"var _jsxFileName = \"/Users/nexle-user/Documents/dr-web-react/src/Manage/Home/index.js\";\nimport React, { Component } from 'react';\nimport { Table, Button, Tag, message, Popconfirm, Select } from 'antd';\nimport { FirebaseRef } from '../../lib/firebase';\nimport serviceMail from '../../services/sendmail';\nimport { supportInfo } from './../../components/ChatBox/Const';\nimport { EditableCell, EditableFormRow } from './../../components/CustomerTable';\nconst {\n  Option\n} = Select;\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSave = row => {\n      const ref = FirebaseRef.child(`/docter/${row.id}`);\n      ref.set({ ...row\n      });\n    };\n\n    this.state = {\n      data: [],\n      loading: false,\n      visibleSignUp: false,\n      action: false,\n      status: 'pending'\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    let ref = FirebaseRef.child(`/docter`);\n    ref.on('value', snapshot => {\n      const data = snapshot.val();\n\n      if (data && typeof data === 'object') {\n        let newData = [];\n        Object.keys(data).forEach(key => {\n          if (data[key]) {\n            newData.push({ ...data[key],\n              id: key\n            });\n          }\n        });\n        const newArray = newData.reverse();\n        this.setState({\n          data: newArray\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  handleSendMail(Subject, Message, from, to) {\n    const data = {\n      from,\n      to,\n      subject: Subject,\n      html: Message\n    };\n    serviceMail.sendMail(data).then(() => {});\n  }\n\n  confirm(id) {\n    const ref = FirebaseRef.child(`docter/${id}`);\n    ref.remove().then(() => {\n      message.success(\"Notify was removed!\");\n    }).catch(err => {\n      message.error(err);\n    });\n  }\n\n  render() {\n    const columns = [{\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      editable: true,\n      render: text => /*#__PURE__*/React.createElement(React.Fragment, null, text)\n    }, {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email'\n    }, {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status'\n    }, {\n      title: 'Action',\n      key: 'action',\n      render: (text, record) => /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Popconfirm, {\n        placement: \"top\",\n        title: \"Bạn có chắc sẽ xóa người dùng này ?\",\n        onConfirm: () => {\n          this.confirm(record.id);\n        },\n        okText: \"C\\xF3\",\n        cancelText: \"kh\\xF4ng\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Tag, {\n        color: \"red\",\n        key: \"delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      }, \"Xo\\xE1\")), /*#__PURE__*/React.createElement(Tag, {\n        onClick: () => {\n          const subject = `Patient ${record.patientName} try to share file to you.`;\n          const content = `<div>\n                <div>  <span>username: </span> <span>${record.email}</span></div>\n                  <div>  <span>Password: </span> <span>${record.id}</span></div>\n                  <div>\n                     For priviate of patient link see info below \n                  </div>\n                  <a href=\"http://${record.name}.dr.genchealth.com/\" tagert=\"_blank\">http://${record.name}.dr.genchealth.com/</a>\n              </div>`;\n          this.handleSendMail(subject, content, supportInfo.aboutMe, [record.email]);\n          const ref = FirebaseRef.child(`/docter/${record.id}`);\n          ref.set({ ...record,\n            status: 'active'\n          }).then(() => {\n            message.success(\"Send email to docter successfully\");\n          });\n        },\n        color: \"rgb(254, 140, 0)\",\n        key: \"delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, status === \"pending\" ? 'Send Email' : 'Re-send Email'))\n    }];\n    const {\n      data,\n      loading,\n      status\n    } = this.state;\n    const newData = data.filter(item => item.status === status);\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell\n      }\n    };\n    const newColumns = columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return { ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: record => {\n            this.handleSave(record);\n          }\n        })\n      };\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"right\",\n        width: \"100%\",\n        marginBottom: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      placeholder: \"Status\",\n      value: status,\n      style: {\n        width: \"250px\",\n        marginRight: \"20px\",\n        textAlign: \"left\"\n      },\n      onChange: value => {\n        this.setState({\n          status: value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      key: 1,\n      value: \"pending\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, \"Pending\"), /*#__PURE__*/React.createElement(Option, {\n      key: 2,\n      value: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, \"Active\"))), /*#__PURE__*/React.createElement(Table, {\n      rowClassName: () => 'editable-row',\n      components: components,\n      loading: loading,\n      columns: newColumns,\n      dataSource: newData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/nexle-user/Documents/dr-web-react/src/Manage/Home/index.js"],"names":["React","Component","Table","Button","Tag","message","Popconfirm","Select","FirebaseRef","serviceMail","supportInfo","EditableCell","EditableFormRow","Option","Home","constructor","props","handleSave","row","ref","child","id","set","state","data","loading","visibleSignUp","action","status","componentDidMount","setState","on","snapshot","val","newData","Object","keys","forEach","key","push","newArray","reverse","handleSendMail","Subject","Message","from","to","subject","html","sendMail","then","confirm","remove","success","catch","err","error","render","columns","title","dataIndex","editable","text","record","patientName","content","email","name","aboutMe","filter","item","components","body","cell","newColumns","map","col","onCell","textAlign","width","marginBottom","marginRight","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Table, Button, Tag, message, Popconfirm, Select } from 'antd';\nimport { FirebaseRef } from '../../lib/firebase'\nimport serviceMail from '../../services/sendmail'\nimport { supportInfo } from './../../components/ChatBox/Const'\nimport { EditableCell, EditableFormRow } from './../../components/CustomerTable'\n\nconst { Option } = Select;\n\nclass Home extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: [],\n      loading: false,\n      visibleSignUp: false,\n      action: false,\n      status: 'pending'\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    })\n    let ref = FirebaseRef.child(`/docter`)\n    ref.on('value', snapshot => {\n      const data = snapshot.val()\n      if (data && typeof (data) === 'object') {\n        let newData = []\n        Object.keys(data).forEach(key => {\n          if (data[key]) {\n            newData.push({\n              ...data[key],\n              id: key,\n            })\n          }\n        })\n        const newArray = newData.reverse()\n\n        this.setState({\n          data: newArray\n\n        })\n      }\n      this.setState({\n        loading: false\n      })\n    })\n  }\n\n  handleSendMail(Subject, Message, from, to) {\n    const data = {\n      from,\n      to,\n      subject: Subject,\n      html: Message\n    }\n    serviceMail.sendMail(data).then(() => {\n    })\n  }\n\n  confirm(id) {\n    const ref = FirebaseRef.child(`docter/${id}`)\n\n    ref.remove().then(() => {\n      message.success(\"Notify was removed!\")\n\n    }).catch(err => {\n      message.error(err)\n    })\n  }\n\n  handleSave = row => {\n\n    const ref = FirebaseRef.child(`/docter/${row.id}`)\n    ref.set({\n      ...row\n    })\n\n\n  };\n\n  render() {\n\n    const columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        editable: true,\n        render: text => <>\n          {text}\n        </>,\n      },\n      {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email',\n      },\n      {\n        title: 'Status',\n        dataIndex: 'status',\n        key: 'status',\n      },\n      {\n        title: 'Action',\n        key: 'action',\n        render: (text, record) => (\n          <span>\n            <Popconfirm placement=\"top\" title={\"Bạn có chắc sẽ xóa người dùng này ?\"} onConfirm={() => { this.confirm(record.id) }} okText=\"Có\" cancelText=\"không\">\n              <Tag color={\"red\"} key={\"delete\"}>\n                Xoá\n                </Tag>\n            </Popconfirm>\n            <Tag\n              onClick={() => {\n                const subject = `Patient ${record.patientName} try to share file to you.`\n                const content = `<div>\n                <div>  <span>username: </span> <span>${record.email}</span></div>\n                  <div>  <span>Password: </span> <span>${record.id}</span></div>\n                  <div>\n                     For priviate of patient link see info below \n                  </div>\n                  <a href=\"http://${record.name}.dr.genchealth.com/\" tagert=\"_blank\">http://${record.name}.dr.genchealth.com/</a>\n              </div>`\n\n                this.handleSendMail(subject, content, supportInfo.aboutMe, [record.email])\n                const ref = FirebaseRef.child(`/docter/${record.id}`)\n                ref.set({\n                  ...record,\n                  status: 'active'\n                }).then(() => {\n                  message.success(\"Send email to docter successfully\")\n                })\n              }}\n              color={\"rgb(254, 140, 0)\"}\n              key={\"delete\"}>\n              {status === \"pending\" ? 'Send Email' : 'Re-send Email'}\n            </Tag>\n\n          </span >\n        ),\n      },\n    ];\n\n    const { data, loading, status } = this.state\n\n    const newData = data.filter(item => item.status === status)\n\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell,\n      },\n    };\n\n    const newColumns = columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: (record) => { this.handleSave(record) },\n        }),\n      };\n    });\n\n    return (\n      <div >\n        <div style={{ textAlign: \"right\", width: \"100%\", marginBottom: \"15px\" }}>\n          <Select\n\n            placeholder=\"Status\"\n            value={status}\n            style={{\n              width: \"250px\",\n              marginRight: \"20px\",\n              textAlign: \"left\",\n            }}\n\n            onChange={(value) => {\n              this.setState({\n                status: value\n              })\n            }}\n          >\n\n            <Option key={1} value={\"pending\"}>Pending</Option>\n            <Option key={2} value={\"active\"}>Active</Option>\n          </Select>\n        </div>\n        <Table rowClassName={() => 'editable-row'} components={components} loading={loading} columns={newColumns} dataSource={newData} />\n\n      </div>\n    )\n  }\n\n}\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}