{"ast":null,"code":"var _jsxFileName = \"/Users/nexle-user/Documents/dr-web-react/src/components/ChatBoard/ChatBoard.js\";\nimport moment from 'moment';\nimport React, { Component } from 'react';\nimport ReactLoading from 'react-loading';\nimport { myStorage, myFirestore } from '../../lib/firebase';\nimport images from '../Themes/Images';\nimport './ChatBoard.css';\nimport '../Main/Main.css';\nimport { AppString, supportInfo } from './../ChatBox/Const';\nexport default class ChatBoard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getListHistory = () => {\n      if (this.removeListener) {\n        this.removeListener();\n      }\n\n      this.listMessage.length = 0;\n      this.setState({\n        isLoading: true\n      });\n\n      if (this.hashString(this.currentUserId) <= this.hashString(this.currentPeerUser.id)) {\n        this.groupChatId = `${this.currentUserId}-${this.currentPeerUser.id}`;\n      } else {\n        this.groupChatId = `${this.currentPeerUser.id}-${this.currentUserId}`;\n      } // Get history and listen new data added\n\n\n      this.removeListener = myFirestore.collection(AppString.NODE_MESSAGES).doc(this.groupChatId).collection(this.groupChatId).onSnapshot(snapshot => {\n        snapshot.docChanges().forEach(change => {\n          if (change.type === AppString.DOC_ADDED) {\n            this.listMessage.push(change.doc.data());\n          }\n        });\n        this.setState({\n          isLoading: false\n        });\n      }, err => {\n        this.props.showToast(0, err.toString());\n      });\n    };\n\n    this.openListSticker = () => {\n      this.setState({\n        isShowSticker: !this.state.isShowSticker\n      });\n    };\n\n    this.onSendMessage = (content, type) => {\n      if (this.state.isShowSticker && type === 2) {\n        this.setState({\n          isShowSticker: false\n        });\n      }\n\n      if (content.trim() === '') {\n        return;\n      }\n\n      const timestamp = moment().valueOf().toString();\n      const itemMessage = {\n        idFrom: this.currentUserId,\n        idTo: this.currentPeerUser.id,\n        timestamp: timestamp,\n        content: content.trim(),\n        type: type\n      };\n      myFirestore.collection(AppString.NODE_MESSAGES).doc(this.groupChatId).collection(this.groupChatId).doc(timestamp).set(itemMessage).then(() => {\n        this.setState({\n          inputValue: ''\n        });\n      }).catch(err => {\n        this.props.showToast(0, err.toString());\n      });\n    };\n\n    this.onChoosePhoto = event => {\n      if (event.target.files && event.target.files[0]) {\n        this.setState({\n          isLoading: true\n        });\n        this.currentPhotoFile = event.target.files[0]; // Check this file is an image?\n\n        const prefixFiletype = event.target.files[0].type.toString();\n\n        if (prefixFiletype.indexOf(AppString.PREFIX_IMAGE) === 0) {\n          this.uploadPhoto();\n        } else {\n          this.setState({\n            isLoading: false\n          });\n          this.props.showToast(0, 'This file is not an image');\n        }\n      } else {\n        this.setState({\n          isLoading: false\n        });\n      }\n    };\n\n    this.uploadPhoto = () => {\n      if (this.currentPhotoFile) {\n        const timestamp = moment().valueOf().toString();\n        const uploadTask = myStorage.ref().child(timestamp).put(this.currentPhotoFile);\n        uploadTask.on(AppString.UPLOAD_CHANGED, null, err => {\n          this.setState({\n            isLoading: false\n          });\n          this.props.showToast(0, err.message);\n        }, () => {\n          uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            this.setState({\n              isLoading: false\n            });\n            this.onSendMessage(downloadURL, 1);\n          });\n        });\n      } else {\n        this.setState({\n          isLoading: false\n        });\n        this.props.showToast(0, 'File is null');\n      }\n    };\n\n    this.onKeyboardPress = event => {\n      if (event.key === 'Enter') {\n        this.onSendMessage(this.state.inputValue, 0);\n      }\n    };\n\n    this.scrollToBottom = () => {\n      if (this.messagesEnd) {\n        this.messagesEnd.scrollIntoView({});\n      }\n    };\n\n    this.renderListMessage = () => {\n      if (this.listMessage.length > 0) {\n        let viewListMessage = [];\n        this.listMessage.forEach((item, index) => {\n          if (item.idFrom === this.currentUserId) {\n            // Item right (my message)\n            if (item.type === 0) {\n              viewListMessage.push( /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewItemRight\",\n                key: item.timestamp,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(\"span\", {\n                className: \"textContentItem\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 17\n                }\n              }, item.content)));\n            } else if (item.type === 1) {\n              viewListMessage.push( /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewItemRight2\",\n                key: item.timestamp,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                className: \"imgItemRight\",\n                src: item.content,\n                alt: \"content message\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 17\n                }\n              })));\n            } else {\n              viewListMessage.push( /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewItemRight3\",\n                key: item.timestamp,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                className: \"imgItemRight\",\n                src: this.getGifImage(item.content),\n                alt: \"content message\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 17\n                }\n              })));\n            }\n          } else {\n            // Item left (peer message)\n            if (item.type === 0) {\n              viewListMessage.push( /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewWrapItemLeft\",\n                key: item.timestamp,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewWrapItemLeft3\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 17\n                }\n              }, this.isLastMessageLeft(index) ? /*#__PURE__*/React.createElement(\"img\", {\n                src: this.currentPeerUser.photoUrl && this.currentPeerUser.photoUrl !== '' ? this.currentPeerUser.photoUrl : '/assets/img/avatar.png',\n                alt: \"avatar\",\n                className: \"peerAvatarLeft\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 21\n                }\n              }) : /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewPaddingLeft\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 23\n                }\n              }), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewItemLeft\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(\"span\", {\n                className: \"textContentItem\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 21\n                }\n              }, item.content))), this.isLastMessageLeft(index) ? /*#__PURE__*/React.createElement(\"span\", {\n                className: \"textTimeLeft\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }\n              }, moment(Number(item.timestamp)).format('ll')) : null));\n            } else if (item.type === 1) {\n              viewListMessage.push( /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewWrapItemLeft2\",\n                key: item.timestamp,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewWrapItemLeft3\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 17\n                }\n              }, this.isLastMessageLeft(index) ? /*#__PURE__*/React.createElement(\"img\", {\n                src: this.currentPeerUser.photoUrl && this.currentPeerUser.photoUrl !== '' ? this.currentPeerUser.photoUrl : '/assets/img/avatar.png',\n                alt: \"avatar\",\n                className: \"peerAvatarLeft\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }\n              }) : /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewPaddingLeft\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 23\n                }\n              }), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewItemLeft2\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                className: \"imgItemLeft\",\n                src: item.content,\n                alt: \"content message\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 21\n                }\n              }))), this.isLastMessageLeft(index) ? /*#__PURE__*/React.createElement(\"span\", {\n                className: \"textTimeLeft\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 19\n                }\n              }, moment(Number(item.timestamp)).format('ll')) : null));\n            } else {\n              viewListMessage.push( /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewWrapItemLeft2\",\n                key: item.timestamp,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewWrapItemLeft3\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 17\n                }\n              }, this.isLastMessageLeft(index) ? /*#__PURE__*/React.createElement(\"img\", {\n                src: this.currentPeerUser.photoUrl && this.currentPeerUser.photoUrl !== '' ? this.currentPeerUser.photoUrl : '/assets/img/avatar.png',\n                alt: \"avatar\",\n                className: \"peerAvatarLeft\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 21\n                }\n              }) : /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewPaddingLeft\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 23\n                }\n              }), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewItemLeft3\",\n                key: item.timestamp,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(\"img\", {\n                className: \"imgItemLeft\",\n                src: this.getGifImage(item.content),\n                alt: \"content message\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 21\n                }\n              }))), this.isLastMessageLeft(index) ? /*#__PURE__*/React.createElement(\"span\", {\n                className: \"textTimeLeft\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 19\n                }\n              }, moment(Number(item.timestamp)).format('ll')) : null));\n            }\n          }\n        });\n        return viewListMessage;\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"viewWrapSayHi\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"textSayHi\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 11\n          }\n        }, \"Ask somthing for supporter ?\"), /*#__PURE__*/React.createElement(\"img\", {\n          className: \"imgWaveHand\",\n          src: images.ic_wave_hand,\n          alt: \"wave hand\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 11\n          }\n        }));\n      }\n    };\n\n    this.renderStickers = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"viewStickers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi1,\n        alt: \"sticker\",\n        onClick: () => this.onSendMessage('mimi1', 2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi2,\n        alt: \"sticker\",\n        onClick: () => this.onSendMessage('mimi2', 2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi3,\n        alt: \"sticker\",\n        onClick: () => this.onSendMessage('mimi3', 2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi4,\n        alt: \"sticker\",\n        onClick: () => this.onSendMessage('mimi4', 2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi5,\n        alt: \"sticker\",\n        onClick: () => this.onSendMessage('mimi5', 2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi6,\n        alt: \"sticker\",\n        onClick: () => this.onSendMessage('mimi6', 2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi7,\n        alt: \"sticker\",\n        onClick: () => this.onSendMessage('mimi7', 2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi8,\n        alt: \"sticker\",\n        onClick: () => this.onSendMessage('mimi8', 2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        className: \"imgSticker\",\n        src: images.mimi9,\n        alt: \"sticker\",\n        onClick: () => this.onSendMessage('mimi9', 2),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    this.hashString = str => {\n      let hash = 0;\n\n      for (let i = 0; i < str.length; i++) {\n        hash += Math.pow(str.charCodeAt(i) * 31, str.length - i);\n        hash = hash & hash; // Convert to 32bit integer\n      }\n\n      return hash;\n    };\n\n    this.getGifImage = value => {\n      switch (value) {\n        case 'mimi1':\n          return images.mimi1;\n\n        case 'mimi2':\n          return images.mimi2;\n\n        case 'mimi3':\n          return images.mimi3;\n\n        case 'mimi4':\n          return images.mimi4;\n\n        case 'mimi5':\n          return images.mimi5;\n\n        case 'mimi6':\n          return images.mimi6;\n\n        case 'mimi7':\n          return images.mimi7;\n\n        case 'mimi8':\n          return images.mimi8;\n\n        case 'mimi9':\n          return images.mimi9;\n\n        default:\n          return null;\n      }\n    };\n\n    this.state = {\n      isLoading: false,\n      isShowSticker: false,\n      inputValue: ''\n    };\n    this.currentUserId = supportInfo.id;\n    this.currentUserAvatar = supportInfo.photoUrl;\n    this.currentUserNickname = supportInfo.nickName;\n    this.listMessage = [];\n    this.currentPeerUser = this.props.currentPeerUser;\n    this.groupChatId = null;\n    this.removeListener = null;\n    this.currentPhotoFile = null;\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  componentDidMount() {\n    // For first render, it's not go through componentWillReceiveProps\n    this.getListHistory();\n  }\n\n  componentWillUnmount() {\n    if (this.removeListener) {\n      this.removeListener();\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.currentPeerUser) {\n      this.currentPeerUser = newProps.currentPeerUser;\n      this.getListHistory();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"viewChatBoard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"headerChatBoard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"viewAvatarItem viewAvatarItem-Second\",\n      style: {\n        backgroundColor: this.currentPeerUser.color || 'black'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, this.currentPeerUser.nickname.toUpperCase().substring(0, 1)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"textHeaderChatBoard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, this.currentPeerUser.nickname)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"viewListContentChat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, this.renderListMessage(), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: 'left',\n        clear: 'both'\n      },\n      ref: el => {\n        this.messagesEnd = el;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }\n    })), this.state.isShowSticker ? this.renderStickers() : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"viewBottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"icOpenGallery\",\n      src: images.ic_photo,\n      alt: \"icon open gallery\",\n      onClick: () => this.refInput.click(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      ref: el => {\n        this.refInput = el;\n      },\n      accept: \"image/*\",\n      className: \"viewInputGallery\",\n      type: \"file\",\n      onChange: this.onChoosePhoto,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"icOpenSticker\",\n      src: images.ic_sticker,\n      alt: \"icon open sticker\",\n      onClick: this.openListSticker,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"viewInput\",\n      placeholder: \"Type your message...\",\n      value: this.state.inputValue,\n      onChange: event => {\n        this.setState({\n          inputValue: event.target.value\n        });\n      },\n      onKeyPress: this.onKeyboardPress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"icSend\",\n      src: images.ic_send,\n      alt: \"icon send\",\n      onClick: () => this.onSendMessage(this.state.inputValue, 0),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }\n    })), this.state.isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"viewLoading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ReactLoading, {\n      type: 'spin',\n      color: '#203152',\n      height: '3%',\n      width: '3%',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    })) : null);\n  }\n\n  isLastMessageLeft(index) {\n    if (index + 1 < this.listMessage.length && this.listMessage[index + 1].idFrom === this.currentUserId || index === this.listMessage.length - 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isLastMessageRight(index) {\n    if (index + 1 < this.listMessage.length && this.listMessage[index + 1].idFrom !== this.currentUserId || index === this.listMessage.length - 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/nexle-user/Documents/dr-web-react/src/components/ChatBoard/ChatBoard.js"],"names":["moment","React","Component","ReactLoading","myStorage","myFirestore","images","AppString","supportInfo","ChatBoard","constructor","props","getListHistory","removeListener","listMessage","length","setState","isLoading","hashString","currentUserId","currentPeerUser","id","groupChatId","collection","NODE_MESSAGES","doc","onSnapshot","snapshot","docChanges","forEach","change","type","DOC_ADDED","push","data","err","showToast","toString","openListSticker","isShowSticker","state","onSendMessage","content","trim","timestamp","valueOf","itemMessage","idFrom","idTo","set","then","inputValue","catch","onChoosePhoto","event","target","files","currentPhotoFile","prefixFiletype","indexOf","PREFIX_IMAGE","uploadPhoto","uploadTask","ref","child","put","on","UPLOAD_CHANGED","message","getDownloadURL","downloadURL","onKeyboardPress","key","scrollToBottom","messagesEnd","scrollIntoView","renderListMessage","viewListMessage","item","index","getGifImage","isLastMessageLeft","photoUrl","Number","format","ic_wave_hand","renderStickers","mimi1","mimi2","mimi3","mimi4","mimi5","mimi6","mimi7","mimi8","mimi9","str","hash","i","Math","pow","charCodeAt","value","currentUserAvatar","currentUserNickname","nickName","componentDidUpdate","componentDidMount","componentWillUnmount","componentWillReceiveProps","newProps","render","backgroundColor","color","nickname","toUpperCase","substring","float","clear","el","ic_photo","refInput","click","ic_sticker","ic_send","isLastMessageRight"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport React, { Component } from 'react'\nimport ReactLoading from 'react-loading'\nimport { myStorage, myFirestore } from '../../lib/firebase'\nimport images from '../Themes/Images'\nimport './ChatBoard.css'\nimport '../Main/Main.css'\nimport { AppString, supportInfo } from './../ChatBox/Const'\n\nexport default class ChatBoard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: false,\n      isShowSticker: false,\n      inputValue: ''\n    }\n    this.currentUserId = supportInfo.id\n    this.currentUserAvatar = supportInfo.photoUrl\n    this.currentUserNickname = supportInfo.nickName\n    this.listMessage = []\n    this.currentPeerUser = this.props.currentPeerUser\n    this.groupChatId = null\n    this.removeListener = null\n    this.currentPhotoFile = null\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom()\n  }\n\n  componentDidMount() {\n    // For first render, it's not go through componentWillReceiveProps\n    this.getListHistory()\n  }\n\n  componentWillUnmount() {\n    if (this.removeListener) {\n      this.removeListener()\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.currentPeerUser) {\n      this.currentPeerUser = newProps.currentPeerUser\n      this.getListHistory()\n    }\n  }\n\n  getListHistory = () => {\n    if (this.removeListener) {\n      this.removeListener()\n    }\n    this.listMessage.length = 0\n    this.setState({ isLoading: true })\n    if (\n      this.hashString(this.currentUserId) <=\n      this.hashString(this.currentPeerUser.id)\n    ) {\n      this.groupChatId = `${this.currentUserId}-${this.currentPeerUser.id}`\n    } else {\n      this.groupChatId = `${this.currentPeerUser.id}-${this.currentUserId}`\n    }\n\n    // Get history and listen new data added\n    this.removeListener = myFirestore\n      .collection(AppString.NODE_MESSAGES)\n      .doc(this.groupChatId)\n      .collection(this.groupChatId)\n      .onSnapshot(\n        snapshot => {\n          snapshot.docChanges().forEach(change => {\n            if (change.type === AppString.DOC_ADDED) {\n              this.listMessage.push(change.doc.data())\n            }\n          })\n          this.setState({ isLoading: false })\n        },\n        err => {\n          this.props.showToast(0, err.toString())\n        }\n      )\n  }\n\n  openListSticker = () => {\n    this.setState({ isShowSticker: !this.state.isShowSticker })\n  }\n\n  onSendMessage = (content, type) => {\n    if (this.state.isShowSticker && type === 2) {\n      this.setState({ isShowSticker: false })\n    }\n\n    if (content.trim() === '') {\n      return\n    }\n\n    const timestamp = moment()\n      .valueOf()\n      .toString()\n\n    const itemMessage = {\n      idFrom: this.currentUserId,\n      idTo: this.currentPeerUser.id,\n      timestamp: timestamp,\n      content: content.trim(),\n      type: type\n    }\n\n    myFirestore\n      .collection(AppString.NODE_MESSAGES)\n      .doc(this.groupChatId)\n      .collection(this.groupChatId)\n      .doc(timestamp)\n      .set(itemMessage)\n      .then(() => {\n        this.setState({ inputValue: '' })\n      })\n      .catch(err => {\n        this.props.showToast(0, err.toString())\n      })\n  }\n\n  onChoosePhoto = event => {\n    if (event.target.files && event.target.files[0]) {\n      this.setState({ isLoading: true })\n      this.currentPhotoFile = event.target.files[0]\n      // Check this file is an image?\n      const prefixFiletype = event.target.files[0].type.toString()\n      if (prefixFiletype.indexOf(AppString.PREFIX_IMAGE) === 0) {\n        this.uploadPhoto()\n      } else {\n        this.setState({ isLoading: false })\n        this.props.showToast(0, 'This file is not an image')\n      }\n    } else {\n      this.setState({ isLoading: false })\n    }\n  }\n\n  uploadPhoto = () => {\n    if (this.currentPhotoFile) {\n      const timestamp = moment()\n        .valueOf()\n        .toString()\n\n      const uploadTask = myStorage\n        .ref()\n        .child(timestamp)\n        .put(this.currentPhotoFile)\n\n      uploadTask.on(\n        AppString.UPLOAD_CHANGED,\n        null,\n        err => {\n          this.setState({ isLoading: false })\n          this.props.showToast(0, err.message)\n        },\n        () => {\n          uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n            this.setState({ isLoading: false })\n            this.onSendMessage(downloadURL, 1)\n          })\n        }\n      )\n    } else {\n      this.setState({ isLoading: false })\n      this.props.showToast(0, 'File is null')\n    }\n  }\n\n  onKeyboardPress = event => {\n    if (event.key === 'Enter') {\n      this.onSendMessage(this.state.inputValue, 0)\n    }\n  }\n\n  scrollToBottom = () => {\n    if (this.messagesEnd) {\n      this.messagesEnd.scrollIntoView({})\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"viewChatBoard\">\n        {/* Header */}\n        <div className=\"headerChatBoard\">\n          <div\n            className=\"viewAvatarItem viewAvatarItem-Second\"\n            style={{ backgroundColor: this.currentPeerUser.color || 'black' }}\n\n\n          >\n            {this.currentPeerUser.nickname.toUpperCase().substring(0, 1)}\n          </div>\n          <span className=\"textHeaderChatBoard\">\n            {this.currentPeerUser.nickname}\n          </span>\n        </div>\n\n        {/* List message */}\n        <div className=\"viewListContentChat\">\n          {this.renderListMessage()}\n          <div\n            style={{ float: 'left', clear: 'both' }}\n            ref={el => {\n              this.messagesEnd = el\n            }}\n          />\n        </div>\n\n        {/* Stickers */}\n        {this.state.isShowSticker ? this.renderStickers() : null}\n\n        {/* View bottom */}\n        <div className=\"viewBottom\">\n          <img\n            className=\"icOpenGallery\"\n            src={images.ic_photo}\n            alt=\"icon open gallery\"\n            onClick={() => this.refInput.click()}\n          />\n\n          <input\n            ref={el => {\n              this.refInput = el\n            }}\n            accept=\"image/*\"\n            className=\"viewInputGallery\"\n            type=\"file\"\n            onChange={this.onChoosePhoto}\n          />\n\n          <img\n            className=\"icOpenSticker\"\n            src={images.ic_sticker}\n            alt=\"icon open sticker\"\n            onClick={this.openListSticker}\n          />\n\n          <input\n            className=\"viewInput\"\n            placeholder=\"Type your message...\"\n            value={this.state.inputValue}\n            onChange={event => {\n              this.setState({ inputValue: event.target.value })\n            }}\n            onKeyPress={this.onKeyboardPress}\n          />\n          <img\n            className=\"icSend\"\n            src={images.ic_send}\n            alt=\"icon send\"\n            onClick={() => this.onSendMessage(this.state.inputValue, 0)}\n          />\n        </div>\n\n        {/* Loading */}\n        {this.state.isLoading ? (\n          <div className=\"viewLoading\">\n            <ReactLoading\n              type={'spin'}\n              color={'#203152'}\n              height={'3%'}\n              width={'3%'}\n            />\n          </div>\n        ) : null}\n      </div>\n    )\n  }\n\n  renderListMessage = () => {\n    if (this.listMessage.length > 0) {\n      let viewListMessage = []\n      this.listMessage.forEach((item, index) => {\n        if (item.idFrom === this.currentUserId) {\n          // Item right (my message)\n          if (item.type === 0) {\n            viewListMessage.push(\n              <div className=\"viewItemRight\" key={item.timestamp}>\n                <span className=\"textContentItem\">{item.content}</span>\n              </div>\n            )\n          } else if (item.type === 1) {\n            viewListMessage.push(\n              <div className=\"viewItemRight2\" key={item.timestamp}>\n                <img\n                  className=\"imgItemRight\"\n                  src={item.content}\n                  alt=\"content message\"\n                />\n              </div>\n            )\n          } else {\n            viewListMessage.push(\n              <div className=\"viewItemRight3\" key={item.timestamp}>\n                <img\n                  className=\"imgItemRight\"\n                  src={this.getGifImage(item.content)}\n                  alt=\"content message\"\n                />\n              </div>\n            )\n          }\n        } else {\n          // Item left (peer message)\n          if (item.type === 0) {\n            viewListMessage.push(\n              <div className=\"viewWrapItemLeft\" key={item.timestamp}>\n                <div className=\"viewWrapItemLeft3\">\n                  {this.isLastMessageLeft(index) ? (\n                    <img\n                      src={this.currentPeerUser.photoUrl && this.currentPeerUser.photoUrl !== '' ? this.currentPeerUser.photoUrl : '/assets/img/avatar.png'}\n                      alt=\"avatar\"\n                      className=\"peerAvatarLeft\"\n                    />\n                  ) : (\n                      <div className=\"viewPaddingLeft\" />\n                    )}\n                  <div className=\"viewItemLeft\">\n                    <span className=\"textContentItem\">{item.content}</span>\n                  </div>\n                </div>\n                {this.isLastMessageLeft(index) ? (\n                  <span className=\"textTimeLeft\">\n                    {moment(Number(item.timestamp)).format('ll')}\n                  </span>\n                ) : null}\n              </div>\n            )\n          } else if (item.type === 1) {\n            viewListMessage.push(\n              <div className=\"viewWrapItemLeft2\" key={item.timestamp}>\n                <div className=\"viewWrapItemLeft3\">\n                  {this.isLastMessageLeft(index) ? (\n                    <img\n                      src={this.currentPeerUser.photoUrl && this.currentPeerUser.photoUrl !== '' ? this.currentPeerUser.photoUrl : '/assets/img/avatar.png'}\n                      alt=\"avatar\"\n                      className=\"peerAvatarLeft\"\n                    />\n                  ) : (\n                      <div className=\"viewPaddingLeft\" />\n                    )}\n                  <div className=\"viewItemLeft2\">\n                    <img\n                      className=\"imgItemLeft\"\n                      src={item.content}\n                      alt=\"content message\"\n                    />\n                  </div>\n                </div>\n                {this.isLastMessageLeft(index) ? (\n                  <span className=\"textTimeLeft\">\n                    {moment(Number(item.timestamp)).format('ll')}\n                  </span>\n                ) : null}\n              </div>\n            )\n          } else {\n            viewListMessage.push(\n              <div className=\"viewWrapItemLeft2\" key={item.timestamp}>\n                <div className=\"viewWrapItemLeft3\">\n                  {this.isLastMessageLeft(index) ? (\n                    <img\n                      src={this.currentPeerUser.photoUrl && this.currentPeerUser.photoUrl !== '' ? this.currentPeerUser.photoUrl : '/assets/img/avatar.png'}\n                      alt=\"avatar\"\n                      className=\"peerAvatarLeft\"\n                    />\n                  ) : (\n                      <div className=\"viewPaddingLeft\" />\n                    )}\n                  <div className=\"viewItemLeft3\" key={item.timestamp}>\n                    <img\n                      className=\"imgItemLeft\"\n                      src={this.getGifImage(item.content)}\n                      alt=\"content message\"\n                    />\n                  </div>\n                </div>\n                {this.isLastMessageLeft(index) ? (\n                  <span className=\"textTimeLeft\">\n                    {moment(Number(item.timestamp)).format('ll')}\n                  </span>\n                ) : null}\n              </div>\n            )\n          }\n        }\n      })\n      return viewListMessage\n    } else {\n      return (\n        <div className=\"viewWrapSayHi\">\n          <span className=\"textSayHi\">Ask somthing for supporter ?</span>\n          <img\n            className=\"imgWaveHand\"\n            src={images.ic_wave_hand}\n            alt=\"wave hand\"\n          />\n        </div>\n      )\n    }\n  }\n\n  renderStickers = () => {\n    return (\n      <div className=\"viewStickers\">\n        <img\n          className=\"imgSticker\"\n          src={images.mimi1}\n          alt=\"sticker\"\n          onClick={() => this.onSendMessage('mimi1', 2)}\n        />\n        <img\n          className=\"imgSticker\"\n          src={images.mimi2}\n          alt=\"sticker\"\n          onClick={() => this.onSendMessage('mimi2', 2)}\n        />\n        <img\n          className=\"imgSticker\"\n          src={images.mimi3}\n          alt=\"sticker\"\n          onClick={() => this.onSendMessage('mimi3', 2)}\n        />\n        <img\n          className=\"imgSticker\"\n          src={images.mimi4}\n          alt=\"sticker\"\n          onClick={() => this.onSendMessage('mimi4', 2)}\n        />\n        <img\n          className=\"imgSticker\"\n          src={images.mimi5}\n          alt=\"sticker\"\n          onClick={() => this.onSendMessage('mimi5', 2)}\n        />\n        <img\n          className=\"imgSticker\"\n          src={images.mimi6}\n          alt=\"sticker\"\n          onClick={() => this.onSendMessage('mimi6', 2)}\n        />\n        <img\n          className=\"imgSticker\"\n          src={images.mimi7}\n          alt=\"sticker\"\n          onClick={() => this.onSendMessage('mimi7', 2)}\n        />\n        <img\n          className=\"imgSticker\"\n          src={images.mimi8}\n          alt=\"sticker\"\n          onClick={() => this.onSendMessage('mimi8', 2)}\n        />\n        <img\n          className=\"imgSticker\"\n          src={images.mimi9}\n          alt=\"sticker\"\n          onClick={() => this.onSendMessage('mimi9', 2)}\n        />\n      </div>\n    )\n  }\n\n  hashString = str => {\n    let hash = 0\n    for (let i = 0; i < str.length; i++) {\n      hash += Math.pow(str.charCodeAt(i) * 31, str.length - i)\n      hash = hash & hash // Convert to 32bit integer\n    }\n    return hash\n  }\n\n  getGifImage = value => {\n    switch (value) {\n      case 'mimi1':\n        return images.mimi1\n      case 'mimi2':\n        return images.mimi2\n      case 'mimi3':\n        return images.mimi3\n      case 'mimi4':\n        return images.mimi4\n      case 'mimi5':\n        return images.mimi5\n      case 'mimi6':\n        return images.mimi6\n      case 'mimi7':\n        return images.mimi7\n      case 'mimi8':\n        return images.mimi8\n      case 'mimi9':\n        return images.mimi9\n      default:\n        return null\n    }\n  }\n\n  isLastMessageLeft(index) {\n    if (\n      (index + 1 < this.listMessage.length &&\n        this.listMessage[index + 1].idFrom === this.currentUserId) ||\n      index === this.listMessage.length - 1\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  isLastMessageRight(index) {\n    if (\n      (index + 1 < this.listMessage.length &&\n        this.listMessage[index + 1].idFrom !== this.currentUserId) ||\n      index === this.listMessage.length - 1\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}