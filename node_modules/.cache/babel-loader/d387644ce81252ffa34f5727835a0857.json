{"ast":null,"code":"var _jsxFileName = \"/Users/nexle-user/Documents/dr-web-react/src/components/Main/Main.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { myFirebase, myFirestore } from '../../lib/firebase';\nimport Loader from '../Loader';\nimport WelcomeBoard from '../WelcomeBoard/WelcomeBoard';\nimport './Main.css';\nimport ChatBoard from './../ChatBoard/ChatBoard';\nimport { AppString, supportInfo } from './../ChatBox/Const';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkLogin = () => {\n      this.getListUser();\n    };\n\n    this.getListUser = async () => {\n      const result = await myFirestore.collection(AppString.NODE_USERS).get();\n\n      if (result.docs.length > 0) {\n        this.listUser = [...result.docs];\n        this.setState({\n          isLoading: false\n        });\n      }\n    };\n\n    this.onLogoutClick = () => {\n      this.setState({\n        isOpenDialogConfirmLogout: true\n      });\n    };\n\n    this.doLogout = () => {\n      this.setState({\n        isLoading: true\n      });\n      myFirebase.auth().signOut().then(() => {\n        this.setState({\n          isLoading: false\n        }, () => {\n          localStorage.clear();\n          this.props.showToast(1, 'Logout success');\n          this.props.history.push('/');\n        });\n      }).catch(function (err) {\n        this.setState({\n          isLoading: false\n        });\n        this.props.showToast(0, err.message);\n      });\n    };\n\n    this.hideDialogConfirmLogout = () => {\n      this.setState({\n        isOpenDialogConfirmLogout: false\n      });\n    };\n\n    this.onProfileClick = () => {\n      this.props.history.push('/profile');\n    };\n\n    this.renderListUser = () => {\n      if (this.listUser.length > 0) {\n        let viewListUser = [];\n        this.listUser.forEach((item, index) => {\n          if (item.data().id !== this.currentUserId) {\n            if (this.currentUserRole && this.currentUserRole !== '') {\n              viewListUser.push( /*#__PURE__*/React.createElement(\"button\", {\n                key: index,\n                className: this.state.currentPeerUser && this.state.currentPeerUser.id === item.data().id ? 'viewWrapItemFocused' : 'viewWrapItem',\n                onClick: () => {\n                  this.setState({\n                    currentPeerUser: item.data()\n                  });\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewAvatarItem viewAvatarItem-Second\",\n                style: {\n                  backgroundColor: item.data().color || 'black'\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 17\n                }\n              }, item.data().nickname.toUpperCase().substring(0, 1)), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewWrapContentItem\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(\"span\", {\n                className: \"textItem\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }\n              }, `Nickname: ${item.data().nickname}`), /*#__PURE__*/React.createElement(\"span\", {\n                className: \"textItem\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }\n              }, `About me: ${item.data().aboutMe ? item.data().aboutMe : 'Not available'}`))));\n            } else if (item.data().role) {\n              viewListUser.push( /*#__PURE__*/React.createElement(\"button\", {\n                key: index,\n                className: this.state.currentPeerUser && this.state.currentPeerUser.id === item.data().id ? 'viewWrapItemFocused' : 'viewWrapItem',\n                onClick: () => {\n                  this.setState({\n                    currentPeerUser: item.data()\n                  });\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewAvatarItem viewAvatarItem-Second\",\n                style: {\n                  backgroundColor: item.data().color || 'black'\n                } // src={item.data().photoUrl && item.data().photoUrl !== '' ? item.data().photoUrl : '/assets/img/avatar.png'}\n                // alt=\"icon avatar\"\n                ,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 17\n                }\n              }, item.data().nickname.toUpperCase().substring(0, 1)), /*#__PURE__*/React.createElement(\"div\", {\n                className: \"viewWrapContentItem\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(\"span\", {\n                className: \"textItem\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }\n              }, `Nickname: ${item.data().nickname}`), /*#__PURE__*/React.createElement(\"span\", {\n                className: \"textItem\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }\n              }, `About me: ${item.data().aboutMe ? item.data().aboutMe : 'Not available'}`))));\n            }\n          }\n        });\n        return viewListUser;\n      } else {\n        return null;\n      }\n    };\n\n    this.renderDialogConfirmLogout = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"viewWrapTextDialogConfirmLogout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"titleDialogConfirmLogout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }\n      }, \"Are you sure to logout?\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"viewWrapButtonDialogConfirmLogout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btnYes\",\n        onClick: this.doLogout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }\n      }, \"YES\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btnNo\",\n        onClick: this.hideDialogConfirmLogout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }\n      }, \"CANCEL\")));\n    };\n\n    this.state = {\n      isLoading: true,\n      isOpenDialogConfirmLogout: false,\n      currentPeerUser: null\n    };\n    this.currentUserId = props.member.id;\n    this.currentUserAvatar = supportInfo.photoUrl;\n    this.currentUserNickname = supportInfo.nickName;\n    this.currentUserRole = supportInfo.role;\n    this.listUser = [];\n  }\n\n  componentDidMount() {\n    this.checkLogin();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"viewListUser\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, \" \", this.renderListUser()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"viewBoard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, this.state.currentPeerUser ? /*#__PURE__*/React.createElement(ChatBoard, {\n      currentPeerUser: this.state.currentPeerUser,\n      showToast: this.props.showToast,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(WelcomeBoard, {\n      currentUserNickname: this.currentUserNickname,\n      currentUserAvatar: this.currentUserAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }))), this.state.isOpenDialogConfirmLogout ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"viewCoverScreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    }, this.renderDialogConfirmLogout()) : null, this.state.isLoading ? /*#__PURE__*/React.createElement(Loader, {\n      show: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }) : null);\n  }\n\n}\n\nexport default withRouter(Main);","map":{"version":3,"sources":["/Users/nexle-user/Documents/dr-web-react/src/components/Main/Main.js"],"names":["React","Component","withRouter","myFirebase","myFirestore","Loader","WelcomeBoard","ChatBoard","AppString","supportInfo","Main","constructor","props","checkLogin","getListUser","result","collection","NODE_USERS","get","docs","length","listUser","setState","isLoading","onLogoutClick","isOpenDialogConfirmLogout","doLogout","auth","signOut","then","localStorage","clear","showToast","history","push","catch","err","message","hideDialogConfirmLogout","onProfileClick","renderListUser","viewListUser","forEach","item","index","data","id","currentUserId","currentUserRole","state","currentPeerUser","backgroundColor","color","nickname","toUpperCase","substring","aboutMe","role","renderDialogConfirmLogout","member","currentUserAvatar","photoUrl","currentUserNickname","nickName","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,oBAAxC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,oBAAvC;;AAEA,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AAC3BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAqBnBC,UArBmB,GAqBN,MAAM;AACjB,WAAKC,WAAL;AACD,KAvBkB;;AAAA,SAyBnBA,WAzBmB,GAyBL,YAAY;AACxB,YAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,UAAZ,CAAuBR,SAAS,CAACS,UAAjC,EAA6CC,GAA7C,EAArB;;AACA,UAAIH,MAAM,CAACI,IAAP,CAAYC,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B,aAAKC,QAAL,GAAgB,CAAC,GAAGN,MAAM,CAACI,IAAX,CAAhB;AACA,aAAKG,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD;AACF,KA/BkB;;AAAA,SAiCnBC,aAjCmB,GAiCH,MAAM;AACpB,WAAKF,QAAL,CAAc;AACZG,QAAAA,yBAAyB,EAAE;AADf,OAAd;AAGD,KArCkB;;AAAA,SAuCnBC,QAvCmB,GAuCR,MAAM;AACf,WAAKJ,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACApB,MAAAA,UAAU,CACPwB,IADH,GAEGC,OAFH,GAGGC,IAHH,CAGQ,MAAM;AACV,aAAKP,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAd,EAAoC,MAAM;AACxCO,UAAAA,YAAY,CAACC,KAAb;AACA,eAAKnB,KAAL,CAAWoB,SAAX,CAAqB,CAArB,EAAwB,gBAAxB;AACA,eAAKpB,KAAL,CAAWqB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,SAJD;AAKD,OATH,EAUGC,KAVH,CAUS,UAAUC,GAAV,EAAe;AACpB,aAAKd,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAd;AACA,aAAKX,KAAL,CAAWoB,SAAX,CAAqB,CAArB,EAAwBI,GAAG,CAACC,OAA5B;AACD,OAbH;AAcD,KAvDkB;;AAAA,SAyDnBC,uBAzDmB,GAyDO,MAAM;AAC9B,WAAKhB,QAAL,CAAc;AACZG,QAAAA,yBAAyB,EAAE;AADf,OAAd;AAGD,KA7DkB;;AAAA,SA+DnBc,cA/DmB,GA+DF,MAAM;AACrB,WAAK3B,KAAL,CAAWqB,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACD,KAjEkB;;AAAA,SAmEnBM,cAnEmB,GAmEF,MAAM;AACrB,UAAI,KAAKnB,QAAL,CAAcD,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,YAAIqB,YAAY,GAAG,EAAnB;AACA,aAAKpB,QAAL,CAAcqB,OAAd,CAAsB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrC,cAAID,IAAI,CAACE,IAAL,GAAYC,EAAZ,KAAmB,KAAKC,aAA5B,EAA2C;AAEzC,gBAAI,KAAKC,eAAL,IAAwB,KAAKA,eAAL,KAAyB,EAArD,EAAyD;AAEvDP,cAAAA,YAAY,CAACP,IAAb,eACE;AACE,gBAAA,GAAG,EAAEU,KADP;AAEE,gBAAA,SAAS,EACP,KAAKK,KAAL,CAAWC,eAAX,IACE,KAAKD,KAAL,CAAWC,eAAX,CAA2BJ,EAA3B,KAAkCH,IAAI,CAACE,IAAL,GAAYC,EADhD,GAEI,qBAFJ,GAGI,cANR;AAQE,gBAAA,OAAO,EAAE,MAAM;AACb,uBAAKxB,QAAL,CAAc;AAAE4B,oBAAAA,eAAe,EAAEP,IAAI,CAACE,IAAL;AAAnB,mBAAd;AACD,iBAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAYE;AACE,gBAAA,SAAS,EAAC,sCADZ;AAEE,gBAAA,KAAK,EAAE;AAAEM,kBAAAA,eAAe,EAAER,IAAI,CAACE,IAAL,GAAYO,KAAZ,IAAqB;AAAxC,iBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAIGT,IAAI,CAACE,IAAL,GAAYQ,QAAZ,CAAqBC,WAArB,GAAmCC,SAAnC,CAA6C,CAA7C,EAAgD,CAAhD,CAJH,CAZF,eAkBE;AAAK,gBAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACE;AAAM,gBAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA6B,aAC3BZ,IAAI,CAACE,IAAL,GAAYQ,QACX,EAFH,CADF,eAIE;AAAM,gBAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA6B,aAC3BV,IAAI,CAACE,IAAL,GAAYW,OAAZ,GAAsBb,IAAI,CAACE,IAAL,GAAYW,OAAlC,GAA4C,eAC3C,EAFH,CAJF,CAlBF,CADF;AA6BD,aA/BD,MA+BO,IAAIb,IAAI,CAACE,IAAL,GAAYY,IAAhB,EAAsB;AAC3BhB,cAAAA,YAAY,CAACP,IAAb,eACE;AACE,gBAAA,GAAG,EAAEU,KADP;AAEE,gBAAA,SAAS,EACP,KAAKK,KAAL,CAAWC,eAAX,IACE,KAAKD,KAAL,CAAWC,eAAX,CAA2BJ,EAA3B,KAAkCH,IAAI,CAACE,IAAL,GAAYC,EADhD,GAEI,qBAFJ,GAGI,cANR;AAQE,gBAAA,OAAO,EAAE,MAAM;AACb,uBAAKxB,QAAL,CAAc;AAAE4B,oBAAAA,eAAe,EAAEP,IAAI,CAACE,IAAL;AAAnB,mBAAd;AACD,iBAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAYE;AACE,gBAAA,SAAS,EAAC,sCADZ;AAEE,gBAAA,KAAK,EAAE;AAAEM,kBAAAA,eAAe,EAAER,IAAI,CAACE,IAAL,GAAYO,KAAZ,IAAqB;AAAxC,iBAFT,CAGA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAMGT,IAAI,CAACE,IAAL,GAAYQ,QAAZ,CAAqBC,WAArB,GAAmCC,SAAnC,CAA6C,CAA7C,EAAgD,CAAhD,CANH,CAZF,eAoBE;AAAK,gBAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACE;AAAM,gBAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA6B,aAC3BZ,IAAI,CAACE,IAAL,GAAYQ,QACX,EAFH,CADF,eAIE;AAAM,gBAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA6B,aAC3BV,IAAI,CAACE,IAAL,GAAYW,OAAZ,GAAsBb,IAAI,CAACE,IAAL,GAAYW,OAAlC,GAA4C,eAC3C,EAFH,CAJF,CApBF,CADF;AA+BD;AAEF;AACF,SArED;AAsEA,eAAOf,YAAP;AACD,OAzED,MAyEO;AACL,eAAO,IAAP;AACD;AACF,KAhJkB;;AAAA,SAuLnBiB,yBAvLmB,GAuLS,MAAM;AAChC,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CADF,eAIE;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAE,KAAKhC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE;AAAQ,QAAA,SAAS,EAAC,OAAlB;AAA0B,QAAA,OAAO,EAAE,KAAKY,uBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,CAJF,CADF;AAeD,KAvMkB;;AAEjB,SAAKW,KAAL,GAAa;AACX1B,MAAAA,SAAS,EAAE,IADA;AAEXE,MAAAA,yBAAyB,EAAE,KAFhB;AAGXyB,MAAAA,eAAe,EAAE;AAHN,KAAb;AAMA,SAAKH,aAAL,GAAqBnC,KAAK,CAAC+C,MAAN,CAAab,EAAlC;AACA,SAAKc,iBAAL,GAAyBnD,WAAW,CAACoD,QAArC;AACA,SAAKC,mBAAL,GAA2BrD,WAAW,CAACsD,QAAvC;AAGA,SAAKf,eAAL,GAAuBvC,WAAW,CAACgD,IAAnC;AACA,SAAKpC,QAAL,GAAgB,EAAhB;AACD;;AAED2C,EAAAA,iBAAiB,GAAG;AAClB,SAAKnD,UAAL;AACD;;AA+HDoD,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgC,KAAKzB,cAAL,EAAhC,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKS,KAAL,CAAWC,eAAX,gBACC,oBAAC,SAAD;AACE,MAAA,eAAe,EAAE,KAAKD,KAAL,CAAWC,eAD9B;AAEE,MAAA,SAAS,EAAE,KAAKtC,KAAL,CAAWoB,SAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBAMG,oBAAC,YAAD;AACE,MAAA,mBAAmB,EAAE,KAAK8B,mBAD5B;AAEE,MAAA,iBAAiB,EAAE,KAAKF,iBAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPN,CAFF,CAHF,EAqBG,KAAKX,KAAL,CAAWxB,yBAAX,gBACC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKiC,yBAAL,EADH,CADD,GAIG,IAzBN,EA4BG,KAAKT,KAAL,CAAW1B,SAAX,gBACC,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAEG,IA9BN,CADF;AAkCD;;AAtL0B;;AA2M7B,eAAerB,UAAU,CAACQ,IAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { myFirebase, myFirestore } from '../../lib/firebase'\nimport Loader from '../Loader'\nimport WelcomeBoard from '../WelcomeBoard/WelcomeBoard'\nimport './Main.css'\nimport ChatBoard from './../ChatBoard/ChatBoard'\nimport { AppString, supportInfo } from './../ChatBox/Const'\n\nclass Main extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true,\n      isOpenDialogConfirmLogout: false,\n      currentPeerUser: null\n    }\n\n    this.currentUserId = props.member.id\n    this.currentUserAvatar = supportInfo.photoUrl\n    this.currentUserNickname = supportInfo.nickName\n\n\n    this.currentUserRole = supportInfo.role\n    this.listUser = []\n  }\n\n  componentDidMount() {\n    this.checkLogin()\n  }\n\n  checkLogin = () => {\n    this.getListUser()\n  }\n\n  getListUser = async () => {\n    const result = await myFirestore.collection(AppString.NODE_USERS).get()\n    if (result.docs.length > 0) {\n      this.listUser = [...result.docs]\n      this.setState({ isLoading: false })\n    }\n  }\n\n  onLogoutClick = () => {\n    this.setState({\n      isOpenDialogConfirmLogout: true\n    })\n  }\n\n  doLogout = () => {\n    this.setState({ isLoading: true })\n    myFirebase\n      .auth()\n      .signOut()\n      .then(() => {\n        this.setState({ isLoading: false }, () => {\n          localStorage.clear()\n          this.props.showToast(1, 'Logout success')\n          this.props.history.push('/')\n        })\n      })\n      .catch(function (err) {\n        this.setState({ isLoading: false })\n        this.props.showToast(0, err.message)\n      })\n  }\n\n  hideDialogConfirmLogout = () => {\n    this.setState({\n      isOpenDialogConfirmLogout: false\n    })\n  }\n\n  onProfileClick = () => {\n    this.props.history.push('/profile')\n  }\n\n  renderListUser = () => {\n    if (this.listUser.length > 0) {\n      let viewListUser = []\n      this.listUser.forEach((item, index) => {\n        if (item.data().id !== this.currentUserId) {\n\n          if (this.currentUserRole && this.currentUserRole !== '') {\n\n            viewListUser.push(\n              <button\n                key={index}\n                className={\n                  this.state.currentPeerUser &&\n                    this.state.currentPeerUser.id === item.data().id\n                    ? 'viewWrapItemFocused'\n                    : 'viewWrapItem'\n                }\n                onClick={() => {\n                  this.setState({ currentPeerUser: item.data() })\n                }}\n              >\n                <div\n                  className=\"viewAvatarItem viewAvatarItem-Second\"\n                  style={{ backgroundColor: item.data().color || 'black' }}\n                >\n                  {item.data().nickname.toUpperCase().substring(0, 1)}\n                </div>\n                <div className=\"viewWrapContentItem\">\n                  <span className=\"textItem\">{`Nickname: ${\n                    item.data().nickname\n                    }`}</span>\n                  <span className=\"textItem\">{`About me: ${\n                    item.data().aboutMe ? item.data().aboutMe : 'Not available'\n                    }`}</span>\n                </div>\n              </button>\n            )\n          } else if (item.data().role) {\n            viewListUser.push(\n              <button\n                key={index}\n                className={\n                  this.state.currentPeerUser &&\n                    this.state.currentPeerUser.id === item.data().id\n                    ? 'viewWrapItemFocused'\n                    : 'viewWrapItem'\n                }\n                onClick={() => {\n                  this.setState({ currentPeerUser: item.data() })\n                }}\n              >\n                <div\n                  className=\"viewAvatarItem viewAvatarItem-Second\"\n                  style={{ backgroundColor: item.data().color || 'black' }}\n                // src={item.data().photoUrl && item.data().photoUrl !== '' ? item.data().photoUrl : '/assets/img/avatar.png'}\n                // alt=\"icon avatar\"\n                >\n                  {item.data().nickname.toUpperCase().substring(0, 1)}\n                </div>\n                <div className=\"viewWrapContentItem\">\n                  <span className=\"textItem\">{`Nickname: ${\n                    item.data().nickname\n                    }`}</span>\n                  <span className=\"textItem\">{`About me: ${\n                    item.data().aboutMe ? item.data().aboutMe : 'Not available'\n                    }`}</span>\n                </div>\n              </button>\n            )\n          }\n\n        }\n      })\n      return viewListUser\n    } else {\n      return null\n    }\n  }\n\n  render() {\n    return (\n      <div>\n\n        {/* Body */}\n        <div className=\"body\">\n          <div className=\"viewListUser\"> {this.renderListUser()}</div>\n          <div className=\"viewBoard\">\n            {this.state.currentPeerUser ? (\n              <ChatBoard\n                currentPeerUser={this.state.currentPeerUser}\n                showToast={this.props.showToast}\n              />\n            ) : (\n                <WelcomeBoard\n                  currentUserNickname={this.currentUserNickname}\n                  currentUserAvatar={this.currentUserAvatar}\n                />\n              )}\n          </div>\n        </div>\n\n        {/* Dialog confirm */}\n        {this.state.isOpenDialogConfirmLogout ? (\n          <div className=\"viewCoverScreen\">\n            {this.renderDialogConfirmLogout()}\n          </div>\n        ) : null}\n\n        {/* Loading */}\n        {this.state.isLoading ? (\n          <Loader show={true} />\n        ) : null}\n      </div>\n    )\n  }\n\n  renderDialogConfirmLogout = () => {\n    return (\n      <div>\n        <div className=\"viewWrapTextDialogConfirmLogout\">\n          <span className=\"titleDialogConfirmLogout\">Are you sure to logout?</span>\n        </div>\n        <div className=\"viewWrapButtonDialogConfirmLogout\">\n          <button className=\"btnYes\" onClick={this.doLogout}>\n            YES\n                    </button>\n          <button className=\"btnNo\" onClick={this.hideDialogConfirmLogout}>\n            CANCEL\n                    </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Main)\n"]},"metadata":{},"sourceType":"module"}