{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nexle-user/Documents/dr-web-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/nexle-user/Documents/dr-web-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/nexle-user/Documents/dr-web-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{USER_DETAILS_UPDATE,USER_LOGIN,USER_RESET}from'../constants/memberTypes';import store from'../store';import serviceUser from\"../services/member\";/**\n  * Sign Up to Firebase\n  */export function signUp(formData){var email=formData.email,password=formData.password;var data={user:{email:email,password:password,publicKey:email,userType:'patient'}};return new Promise(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve,reject){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:serviceUser.signUp(data).then(function(result){console.log(result);if(result){var _result$user=result.user,user=_result$user===void 0?{}:_result$user;store.dispatch({type:USER_DETAILS_UPDATE,data:_objectSpread(_objectSpread({},data.user),user)});return resolve({isSuccess:true});}else{return resolve({isSuccess:false,err:\"Something was wrong!\"});}});case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}());}/**\n  * Login to Firebase with Email/Password\n  */export function login(formData){var email=formData.email,password=formData.password;var data={user:{email:email,password:password,publicKey:email}};return new Promise(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(resolve,reject){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:serviceUser.Login(data).then(function(result){if(result){var _result$user2=result.user,user=_result$user2===void 0?{}:_result$user2;store.dispatch({type:USER_LOGIN,data:_objectSpread(_objectSpread({},data.user),user)});return resolve({isSuccess:true});}else{return resolve({isSuccess:false,err:\"Something was wrong!\"});}});case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref2.apply(this,arguments);};}());}/**\n  * Reset Password\n  */export function resetPassword(formData){var email=formData.email;}","map":{"version":3,"sources":["/Users/nexle-user/Documents/dr-web-react/src/actions/member.js"],"names":["USER_DETAILS_UPDATE","USER_LOGIN","USER_RESET","store","serviceUser","signUp","formData","email","password","data","user","publicKey","userType","Promise","resolve","reject","then","result","console","log","dispatch","type","isSuccess","err","login","Login","resetPassword"],"mappings":"ydAEA,OAASA,mBAAT,CAA8BC,UAA9B,CAA0CC,UAA1C,KAA4D,0BAA5D,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,oBAAxB,CACA;;IAGA,MAAO,SAASC,CAAAA,MAAT,CAAgBC,QAAhB,CAA0B,IACvBC,CAAAA,KADuB,CACHD,QADG,CACvBC,KADuB,CAChBC,QADgB,CACHF,QADG,CAChBE,QADgB,CAE/B,GAAMC,CAAAA,IAAI,CAAG,CACXC,IAAI,CAAE,CACJH,KAAK,CAALA,KADI,CAEJC,QAAQ,CAARA,QAFI,CAGJG,SAAS,CAAEJ,KAHP,CAIJK,QAAQ,CAAE,SAJN,CADK,CAAb,CAQA,MAAO,IAAIC,CAAAA,OAAJ,0FAAY,iBAAOC,OAAP,CAAgBC,MAAhB,kHACjBX,WAAW,CAACC,MAAZ,CAAmBI,IAAnB,EAAyBO,IAAzB,CAA8B,SAAAC,MAAM,CAAI,CACtCC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACA,GAAIA,MAAJ,CAAY,kBACYA,MADZ,CACFP,IADE,CACFA,IADE,uBACK,EADL,cAGVP,KAAK,CAACiB,QAAN,CAAe,CACbC,IAAI,CAAErB,mBADO,CACcS,IAAI,gCAC1BA,IAAI,CAACC,IADqB,EAE1BA,IAF0B,CADlB,CAAf,EAQA,MAAOI,CAAAA,OAAO,CAAC,CAAEQ,SAAS,CAAE,IAAb,CAAD,CAAd,CACD,CAZD,IAYO,CAEL,MAAOR,CAAAA,OAAO,CAAC,CAAEQ,SAAS,CAAE,KAAb,CAAoBC,GAAG,CAAE,sBAAzB,CAAD,CAAd,CACD,CACF,CAlBD,EADiB,sDAAZ,mEAAP,CAqBD,CAED;;IAGA,MAAO,SAASC,CAAAA,KAAT,CAAelB,QAAf,CAAyB,IACtBC,CAAAA,KADsB,CACFD,QADE,CACtBC,KADsB,CACfC,QADe,CACFF,QADE,CACfE,QADe,CAE9B,GAAMC,CAAAA,IAAI,CAAG,CACXC,IAAI,CAAE,CACJH,KAAK,CAALA,KADI,CAEJC,QAAQ,CAARA,QAFI,CAGJG,SAAS,CAAEJ,KAHP,CADK,CAAb,CAOA,MAAO,IAAIM,CAAAA,OAAJ,2FAAY,kBAAOC,OAAP,CAAgBC,MAAhB,sHACjBX,WAAW,CAACqB,KAAZ,CAAkBhB,IAAlB,EAAwBO,IAAxB,CAA6B,SAAAC,MAAM,CAAI,CACrC,GAAIA,MAAJ,CAAY,mBACYA,MADZ,CACFP,IADE,CACFA,IADE,wBACK,EADL,eAEVP,KAAK,CAACiB,QAAN,CAAe,CACbC,IAAI,CAAEpB,UADO,CACKQ,IAAI,gCACjBA,IAAI,CAACC,IADY,EAEjBA,IAFiB,CADT,CAAf,EAMA,MAAOI,CAAAA,OAAO,CAAC,CAAEQ,SAAS,CAAE,IAAb,CAAD,CAAd,CACD,CATD,IASO,CAEL,MAAOR,CAAAA,OAAO,CAAC,CAAEQ,SAAS,CAAE,KAAb,CAAoBC,GAAG,CAAE,sBAAzB,CAAD,CAAd,CACD,CAEF,CAfD,EADiB,wDAAZ,qEAAP,CAoBD,CAED;;IAGA,MAAO,SAASG,CAAAA,aAAT,CAAuBpB,QAAvB,CAAiC,IAC9BC,CAAAA,KAD8B,CACpBD,QADoB,CAC9BC,KAD8B,CAIvC","sourcesContent":["\n\nimport { USER_DETAILS_UPDATE, USER_LOGIN, USER_RESET } from '../constants/memberTypes'\nimport store from '../store'\nimport serviceUser from \"../services/member\"\n/**\n  * Sign Up to Firebase\n  */\nexport function signUp(formData) {\n  const { email, password } = formData\n  const data = {\n    user: {\n      email,\n      password,\n      publicKey: email,\n      userType: 'patient'\n    }\n  }\n  return new Promise(async (resolve, reject) => {\n    serviceUser.signUp(data).then(result => {\n      console.log(result)\n      if (result) {\n        const { user = {} } = result\n\n        store.dispatch({\n          type: USER_DETAILS_UPDATE, data: {\n            ...data.user,\n            ...user\n          }\n        })\n\n\n        return resolve({ isSuccess: true })\n      } else {\n\n        return resolve({ isSuccess: false, err: \"Something was wrong!\" })\n      }\n    })\n  })\n}\n\n/**\n  * Login to Firebase with Email/Password\n  */\nexport function login(formData) {\n  const { email, password } = formData\n  const data = {\n    user: {\n      email,\n      password,\n      publicKey: email\n    }\n  }\n  return new Promise(async (resolve, reject) => {\n    serviceUser.Login(data).then(result => {\n      if (result) {\n        const { user = {} } = result\n        store.dispatch({\n          type: USER_LOGIN, data: {\n            ...data.user,\n            ...user\n          }\n        })\n        return resolve({ isSuccess: true })\n      } else {\n\n        return resolve({ isSuccess: false, err: \"Something was wrong!\" })\n      }\n\n    })\n  })\n\n\n}\n\n/**\n  * Reset Password\n  */\nexport function resetPassword(formData) {\n  const { email } = formData\n\n\n}\n\n"]},"metadata":{},"sourceType":"module"}